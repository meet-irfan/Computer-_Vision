# -*- coding: utf-8 -*-
"""Gamma Correction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tiR2gNocOvxm_Qk4v-M5uXq9pSqDpsNX
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
from matplotlib import pyplot as plt

def gamma_correction(img, gamma=1.0):
    """
    Apply gamma correction to an image.

    Parameters:
        img (numpy.ndarray): Input image (BGR or grayscale)
        gamma (float):
            - gamma < 1: Brightens the image
            - gamma = 1: No change
            - gamma > 1: Darkens the image

    Returns:
        numpy.ndarray: Gamma-corrected image
    """
    # Normalize to [0,1] range
    img_normalized = img / 255.0

    # Apply gamma correction
    corrected = np.power(img_normalized, gamma)

    # Scale back to [0,255] range
    return np.uint8(corrected * 255)

# 1. Load the image (convert to grayscale if needed)
img_path = '/content/WhatsApp Image 2023-10-01 at 00.05.58_ac36ee45.jpg'  # CHANGE THIS TO YOUR IMAGE PATH
img = cv2.imread(img_path)

# Check if image loaded successfully
if img is None:
    raise FileNotFoundError(f"Image not found at path: {img_path}")

# 2. Apply gamma corrections
brightened = gamma_correction(img, gamma=0.5)  # Brighten (gamma < 1)
darkened = gamma_correction(img, gamma=1.5)    # Darken (gamma > 1)
original_gamma = gamma_correction(img, gamma=1.0)  # No change

# 3. Display results - Colab version
print("Original Image:")
cv2_imshow(img)

print("\nBrightened Image (gamma=0.5):")
cv2_imshow(brightened)

print("\nDarkened Image (gamma=1.5):")
cv2_imshow(darkened)

# 4. Alternative display with Matplotlib (side-by-side)
plt.figure(figsize=(15, 5))

plt.subplot(1, 3, 1)
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
plt.title('Original')

plt.subplot(1, 3, 2)
plt.imshow(cv2.cvtColor(brightened, cv2.COLOR_BGR2RGB))
plt.title('Gamma=0.5 (Brightened)')

plt.subplot(1, 3, 3)
plt.imshow(cv2.cvtColor(darkened, cv2.COLOR_BGR2RGB))
plt.title('Gamma=1.5 (Darkened)')

plt.show()

# 5. Save the results
cv2.imwrite('original.jpg', img)
cv2.imwrite('brightened_gamma0.5.jpg', brightened)
cv2.imwrite('darkened_gamma1.5.jpg', darkened)